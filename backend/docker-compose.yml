version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    container_name: pgpbot-postgres
    environment:
      POSTGRES_DB: pgpbot_db
      POSTGRES_USER: pgpbot
      POSTGRES_PASSWORD: pgpbot123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c shared_preload_libraries=vector
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pgpbot -d pgpbot_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API with agentic AI
  backend:
    build: .
    container_name: pgpbot-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://pgpbot:pgpbot123@postgres:5432/pgpbot_db
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-api-key}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-http://ollama:11434/v1}
      - MODEL_NAME=${MODEL_NAME:-gpt-3.5-turbo}
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./exports:/app/exports
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama for local LLM (optional)
  ollama:
    image: ollama/ollama:latest
    container_name: pgpbot-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    profiles:
      - local-llm

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: pgpbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - cache

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: pgpbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: pgpbot-network 