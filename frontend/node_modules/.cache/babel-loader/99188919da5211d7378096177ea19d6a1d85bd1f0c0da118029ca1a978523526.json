{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gvsux\\\\OneDrive\\\\Desktop\\\\Anangwe\\\\Budgeting-Bot\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst incomeSources = [\"Job\", \"Side-hustle\", \"Family support\", \"Scholarships\", \"Reimbursements\", \"Tax refunds\"];\nconst expenseCategories = [\"Rent\", \"Groceries\", \"Utilities\", \"Transport\", \"Tuition\", \"Dining out\", \"Entertainment\", \"Other\"];\nexport default function ChatWindow() {\n  _s();\n  // Instead of step-based conditional rendering, maintain a message history for animated bubbles.\n  const [messages, setMessages] = useState([{\n    from: \"bot\",\n    text: \"Hello, I am FinBot, your AI Budgeting Assistant. What is your name?\"\n  }]);\n  const [step, setStep] = useState(1);\n  const [userState, setUserState] = useState({\n    name: \"\",\n    goal: \"\",\n    income: {},\n    expenses: {},\n    qna: \"\",\n    insights: \"\"\n  });\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState(\"\");\n  const inputRef = useRef(null);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n    if (chatEndRef.current) chatEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, loading]);\n\n  // Handle Enter to submit\n  const handleInputKey = e => {\n    if (e.key === \"Enter\") handleUserInput();\n  };\n\n  // Add user and bot messages to the history\n  const addMessage = (from, text) => {\n    setMessages(prev => [...prev, {\n      from,\n      text\n    }]);\n  };\n\n  // Step logic (same as before, but now call addMessage for each exchange)\n  const handleUserInput = async () => {\n    if (!input.trim() || loading) return;\n    // User submits their input\n    if (step === 1) {\n      addMessage(\"user\", input);\n      setUserState(s => ({\n        ...s,\n        name: input\n      }));\n      setInput(\"\");\n      setTimeout(() => {\n        addMessage(\"bot\", \"What is your financial goal this month?\");\n        setStep(2);\n      }, 400);\n    } else if (step === 2) {\n      addMessage(\"user\", input);\n      setUserState(s => ({\n        ...s,\n        goal: input\n      }));\n      setInput(\"\");\n      setTimeout(() => {\n        addMessage(\"bot\", \"You wanna know what I think about your financial goal?\");\n        setStep(3);\n      }, 400);\n    } else if (step === 3) {\n      // Assume \"Yes\" if Enter is pressed, or show two buttons if you wish.\n      addMessage(\"user\", input || \"Yes\");\n      setInput(\"\");\n      setTimeout(() => {\n        addMessage(\"bot\", `How much do you get from ${incomeSources[0]}?`);\n        setStep(4);\n      }, 400);\n    } else if (step >= 4 && step < 4 + incomeSources.length) {\n      const idx = step - 4;\n      addMessage(\"user\", `$${input} from ${incomeSources[idx]}`);\n      setUserState(s => ({\n        ...s,\n        income: {\n          ...s.income,\n          [incomeSources[idx]]: Number(input)\n        }\n      }));\n      setInput(\"\");\n      if (step + 1 < 4 + incomeSources.length) {\n        setTimeout(() => {\n          addMessage(\"bot\", `How much do you get from ${incomeSources[idx + 1]}?`);\n          setStep(step + 1);\n        }, 400);\n      } else {\n        setTimeout(() => {\n          addMessage(\"bot\", `How much do you spend on ${expenseCategories[0]}?`);\n          setStep(step + 1);\n        }, 400);\n      }\n    } else if (step >= 4 + incomeSources.length && step < 4 + incomeSources.length + expenseCategories.length) {\n      const idx = step - (4 + incomeSources.length);\n      addMessage(\"user\", `$${input} for ${expenseCategories[idx]}`);\n      setUserState(s => ({\n        ...s,\n        expenses: {\n          ...s.expenses,\n          [expenseCategories[idx]]: Number(input)\n        }\n      }));\n      setInput(\"\");\n      if (step + 1 < 4 + incomeSources.length + expenseCategories.length) {\n        setTimeout(() => {\n          addMessage(\"bot\", `How much do you spend on ${expenseCategories[idx + 1]}?`);\n          setStep(step + 1);\n        }, 400);\n      } else {\n        setTimeout(() => {\n          addMessage(\"bot\", `Insights for optimizing your money management skills`);\n          setStep(step + 1);\n        }, 400);\n      }\n    } else if (step === 4 + incomeSources.length + expenseCategories.length) {\n      // On \"Enter\" after income/expenses, trigger insights (LLM call)\n      addMessage(\"user\", \"Show me insights\");\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:8000/chat\", {\n        step: \"insights\",\n        user_state: userState\n      });\n      addMessage(\"bot\", res.data.response);\n      setUserState(s => ({\n        ...s,\n        insights: res.data.response\n      }));\n      setLoading(false);\n      setInput(\"\");\n      setStep(step + 1);\n    } else if (step === 5 + incomeSources.length + expenseCategories.length) {\n      addMessage(\"user\", input);\n      setUserState(s => ({\n        ...s,\n        qna: input\n      }));\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:8000/chat\", {\n        step: \"qna\",\n        user_state: {\n          ...userState,\n          qna: input\n        }\n      });\n      addMessage(\"bot\", res.data.response);\n      setLoading(false);\n      setInput(\"\");\n      setStep(step + 1);\n    }\n  };\n\n  // For Q&A step, on Enter also send (so user doesn't have to click Ask)\n  const isQnAStep = step === 5 + incomeSources.length + expenseCategories.length;\n\n  // Last step: download\n  const download = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:8000/export-budget\", userState, {\n        responseType: \"blob\"\n      });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      setSpreadsheetUrl(url);\n      addMessage(\"bot\", \"Your budget spreadsheet is ready!\");\n    } catch (err) {\n      addMessage(\"bot\", \"Sorry, could not download spreadsheet.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window-modern\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-scrollbox\",\n      children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bubble-animate ${msg.from === \"user\" ? \"user-bubble\" : \"bot-bubble\"}`,\n        \"aria-live\": \"polite\",\n        tabIndex: 0,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), step <= 5 + incomeSources.length + expenseCategories.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleInputKey,\n        \"aria-label\": \"Your answer\",\n        style: {\n          flex: 1,\n          minWidth: 0\n        },\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bubble-action-btn\",\n        onClick: handleUserInput,\n        disabled: loading || !input.trim(),\n        \"aria-label\": isQnAStep ? \"Ask\" : \"Send\",\n        children: isQnAStep ? \"Ask\" : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), step > 5 + incomeSources.length + expenseCategories.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bubble-action-btn\",\n        onClick: download,\n        disabled: loading,\n        children: \"Download Budget Spreadsheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), spreadsheetUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: spreadsheetUrl,\n        download: \"budget.xlsx\",\n        style: {\n          marginLeft: 16\n        },\n        children: \"Click here if your download does not start.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"nYBhh8eq214zoNAFOVYC/RVFMjM=\");\n_c = ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","incomeSources","expenseCategories","ChatWindow","_s","messages","setMessages","from","text","step","setStep","userState","setUserState","name","goal","income","expenses","qna","insights","input","setInput","loading","setLoading","spreadsheetUrl","setSpreadsheetUrl","inputRef","chatEndRef","current","focus","scrollIntoView","behavior","handleInputKey","e","key","handleUserInput","addMessage","prev","trim","s","setTimeout","length","idx","Number","res","post","user_state","data","response","isQnAStep","download","responseType","url","URL","createObjectURL","Blob","err","className","children","map","msg","i","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","display","gap","value","onChange","target","onKeyDown","flex","minWidth","disabled","onClick","marginTop","href","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/gvsux/OneDrive/Desktop/Anangwe/Budgeting-Bot/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../styles.css\";\n\nconst incomeSources = [\n  \"Job\", \"Side-hustle\", \"Family support\", \"Scholarships\", \"Reimbursements\", \"Tax refunds\"\n];\nconst expenseCategories = [\n  \"Rent\", \"Groceries\", \"Utilities\", \"Transport\", \"Tuition\", \"Dining out\", \"Entertainment\", \"Other\"\n];\n\nexport default function ChatWindow() {\n  // Instead of step-based conditional rendering, maintain a message history for animated bubbles.\n  const [messages, setMessages] = useState([\n    { from: \"bot\", text: \"Hello, I am FinBot, your AI Budgeting Assistant. What is your name?\" }\n  ]);\n  const [step, setStep] = useState(1);\n  const [userState, setUserState] = useState({\n    name: \"\", goal: \"\", income: {}, expenses: {}, qna: \"\", insights: \"\"\n  });\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [spreadsheetUrl, setSpreadsheetUrl] = useState(\"\");\n  const inputRef = useRef(null);\n  const chatEndRef = useRef(null);\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n    if (chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, loading]);\n\n  // Handle Enter to submit\n  const handleInputKey = e => {\n    if (e.key === \"Enter\") handleUserInput();\n  };\n\n  // Add user and bot messages to the history\n  const addMessage = (from, text) => {\n    setMessages(prev => [...prev, { from, text }]);\n  };\n\n  // Step logic (same as before, but now call addMessage for each exchange)\n  const handleUserInput = async () => {\n    if (!input.trim() || loading) return;\n    // User submits their input\n    if (step === 1) {\n      addMessage(\"user\", input);\n      setUserState(s => ({ ...s, name: input }));\n      setInput(\"\");\n      setTimeout(() => {\n        addMessage(\"bot\", \"What is your financial goal this month?\");\n        setStep(2);\n      }, 400);\n    } else if (step === 2) {\n      addMessage(\"user\", input);\n      setUserState(s => ({ ...s, goal: input }));\n      setInput(\"\");\n      setTimeout(() => {\n        addMessage(\"bot\", \"You wanna know what I think about your financial goal?\");\n        setStep(3);\n      }, 400);\n    } else if (step === 3) {\n      // Assume \"Yes\" if Enter is pressed, or show two buttons if you wish.\n      addMessage(\"user\", input || \"Yes\");\n      setInput(\"\");\n      setTimeout(() => {\n        addMessage(\"bot\", `How much do you get from ${incomeSources[0]}?`);\n        setStep(4);\n      }, 400);\n    } else if (step >= 4 && step < 4 + incomeSources.length) {\n      const idx = step - 4;\n      addMessage(\"user\", `$${input} from ${incomeSources[idx]}`);\n      setUserState(s => ({\n        ...s,\n        income: { ...s.income, [incomeSources[idx]]: Number(input) }\n      }));\n      setInput(\"\");\n      if (step + 1 < 4 + incomeSources.length) {\n        setTimeout(() => {\n          addMessage(\"bot\", `How much do you get from ${incomeSources[idx + 1]}?`);\n          setStep(step + 1);\n        }, 400);\n      } else {\n        setTimeout(() => {\n          addMessage(\"bot\", `How much do you spend on ${expenseCategories[0]}?`);\n          setStep(step + 1);\n        }, 400);\n      }\n    } else if (\n      step >= 4 + incomeSources.length &&\n      step < 4 + incomeSources.length + expenseCategories.length\n    ) {\n      const idx = step - (4 + incomeSources.length);\n      addMessage(\"user\", `$${input} for ${expenseCategories[idx]}`);\n      setUserState(s => ({\n        ...s,\n        expenses: { ...s.expenses, [expenseCategories[idx]]: Number(input) }\n      }));\n      setInput(\"\");\n      if (step + 1 < 4 + incomeSources.length + expenseCategories.length) {\n        setTimeout(() => {\n          addMessage(\"bot\", `How much do you spend on ${expenseCategories[idx + 1]}?`);\n          setStep(step + 1);\n        }, 400);\n      } else {\n        setTimeout(() => {\n          addMessage(\"bot\", `Insights for optimizing your money management skills`);\n          setStep(step + 1);\n        }, 400);\n      }\n    } else if (step === 4 + incomeSources.length + expenseCategories.length) {\n      // On \"Enter\" after income/expenses, trigger insights (LLM call)\n      addMessage(\"user\", \"Show me insights\");\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:8000/chat\", {\n        step: \"insights\",\n        user_state: userState,\n      });\n      addMessage(\"bot\", res.data.response);\n      setUserState(s => ({\n        ...s,\n        insights: res.data.response\n      }));\n      setLoading(false);\n      setInput(\"\");\n      setStep(step + 1);\n    } else if (step === 5 + incomeSources.length + expenseCategories.length) {\n      addMessage(\"user\", input);\n      setUserState(s => ({ ...s, qna: input }));\n      setLoading(true);\n      const res = await axios.post(\"http://localhost:8000/chat\", {\n        step: \"qna\",\n        user_state: { ...userState, qna: input }\n      });\n      addMessage(\"bot\", res.data.response);\n      setLoading(false);\n      setInput(\"\");\n      setStep(step + 1);\n    }\n  };\n\n  // For Q&A step, on Enter also send (so user doesn't have to click Ask)\n  const isQnAStep = step === 5 + incomeSources.length + expenseCategories.length;\n\n  // Last step: download\n  const download = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post(\"http://localhost:8000/export-budget\", userState, { responseType: \"blob\" });\n      const url = URL.createObjectURL(new Blob([res.data]));\n      setSpreadsheetUrl(url);\n      addMessage(\"bot\", \"Your budget spreadsheet is ready!\");\n    } catch (err) {\n      addMessage(\"bot\", \"Sorry, could not download spreadsheet.\");\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"chat-window-modern\">\n      <div className=\"chat-scrollbox\">\n        {messages.map((msg, i) => (\n          <div\n            key={i}\n            className={`bubble-animate ${msg.from === \"user\" ? \"user-bubble\" : \"bot-bubble\"}`}\n            aria-live=\"polite\"\n            tabIndex={0}\n          >\n            {msg.text}\n          </div>\n        ))}\n        <div ref={chatEndRef} />\n      </div>\n      {/* Input for all steps except last */}\n      {(step <= 5 + incomeSources.length + expenseCategories.length) && (\n        <div style={{ display: \"flex\", gap: 10 }}>\n          <input\n            ref={inputRef}\n            value={input}\n            onChange={e => setInput(e.target.value)}\n            onKeyDown={handleInputKey}\n            aria-label=\"Your answer\"\n            style={{ flex: 1, minWidth: 0 }}\n            disabled={loading}\n          />\n          <button\n            className=\"bubble-action-btn\"\n            onClick={handleUserInput}\n            disabled={loading || !input.trim()}\n            aria-label={isQnAStep ? \"Ask\" : \"Send\"}\n          >\n            {isQnAStep ? \"Ask\" : \"Send\"}\n          </button>\n        </div>\n      )}\n      {/* Spreadsheet download step */}\n      {step > 5 + incomeSources.length + expenseCategories.length && (\n        <div style={{ marginTop: 16 }}>\n          <button className=\"bubble-action-btn\" onClick={download} disabled={loading}>\n            Download Budget Spreadsheet\n          </button>\n          {spreadsheetUrl && (\n            <a href={spreadsheetUrl} download=\"budget.xlsx\" style={{ marginLeft: 16 }}>\n              Click here if your download does not start.\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}